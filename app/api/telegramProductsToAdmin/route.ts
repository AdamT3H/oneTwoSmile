const TELEGRAM_TOKEN = "7375273017:AAHvLfUOnqo9rCmc8q5yTbLxQE5r0y-Eh3c";
const TELEGRAM_CHAT_ID = "818686269";

interface PaymentBody {
  amount: number;
  product_names: string[];
  product_counts: number[];
  product_prices: number[];
  client_email: string;
  customer_name: string;
  phone: string;
  comment: string;
  type: string;
  oblast_name: string;
  city: string;
  warehouse: string;
  paymentType: "card" | "paper"; // –¥–æ–¥–∞–Ω–æ
}

async function sendTelegramMessage(order: PaymentBody) {
  const { product_names, product_counts, product_prices } = order;

  const formattedGoods = product_names
    .map((name, index) => {
      return (
        `      üì¶ –¢–æ–≤–∞—Ä ${index + 1}:\n` +
        `              –ù–∞–∑–≤–∞: ${name}\n` +
        `              –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${product_counts[index]}\n` +
        `              –¶—ñ–Ω–∞: ${product_prices[index]} ‚Ç¥\n\n`
      );
    })
    .join("");

  const deliveryText =
    order.type === "nova_poshta"
      ? `üöö –î–æ—Å—Ç–∞–≤–∫–∞: –ù–æ–≤–∞ –ü–æ—à—Ç–∞\n–û–±–ª–∞—Å—Ç—å: ${order.oblast_name}\n–ú—ñ—Å—Ç–æ: ${order.city}\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è: ${order.warehouse}`
      : `üöö –î–æ—Å—Ç–∞–≤–∫–∞: –ó–∞–±–µ—Ä—É—Ç—å —É —Ñ—ñ–∑–∏—á–Ω–æ–º—É –º–∞–≥–∞–∑–∏–Ω—ñ`;

  const paymentText =
    order.paymentType === "card"
      ? "üí≥ –û–ø–ª–∞—Ç–∞: –û–ø–ª–∞—á–µ–Ω–æ"
      : "üí≥ –û–ø–ª–∞—Ç–∞: –ú–∞—î –æ–ø–ª–∞—Ç–∏—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ";

  const message =
    `üõí –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:\n\n` +
    `üë§ –Ü–º'—è: ${order.customer_name || "–ù–µ–≤—ñ–¥–æ–º–æ"}\n` +
    `üìß Email: ${order.client_email || "–ù–µ–≤—ñ–¥–æ–º–æ"}\n` +
    `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone || "–ù–µ–≤—ñ–¥–æ–º–æ"}\n` +
    (order.comment ? `üìù –ö–æ–º–µ–Ω—Ç–∞—Ä: ${order.comment}\n` : "") +
    `${paymentText}\n\n` +
    `${deliveryText}\n` +
    `üõçÔ∏è –¢–æ–≤–∞—Ä–∏:\n${formattedGoods}\n` +
    `üí∞ –ö—ñ–Ω—Ü–µ–≤–∞ —Å—É–º–∞: ${order.amount} ‚Ç¥`;

  const url = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;
  const payload = {
    chat_id: TELEGRAM_CHAT_ID,
    text: message,
    parse_mode: "Markdown",
  };

  const res = await fetch(url, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  });

  if (!res.ok) {
    const text = await res.text();
    console.error("‚ùå Telegram –ø–æ–º–∏–ª–∫–∞:", text);
    throw new Error("Telegram error: " + text);
  }
}

export async function POST(request: Request) {
  try {
    const body: PaymentBody = await request.json();
    await sendTelegramMessage(body);
    return new Response(JSON.stringify({ success: true }), { status: 200 });
  } catch (error: unknown) {
    let message = "Unknown error";
    if (error instanceof Error) {
      message = error.message;
    }
    return new Response(JSON.stringify({ success: false, message }), {
      status: 500,
    });
  }
}
